{"ast":null,"code":"var _jsxFileName = \"/home/twarga/Documents/MERN/mern-chat-app/client/src/components/Chat/ChatList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport UserAvatar from '../UserAvatar/UserAvatar';\nimport { useChat } from '../../hooks/useChat';\nimport './ChatList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatList = ({\n  chats,\n  handleChatSelect\n}) => {\n  _s();\n  const {\n    selectedChat\n  } = useChat();\n\n  // Function to get the other user in a 1-on-1 chat\n  const getSenderDetails = (chat, loggedUserId) => {\n    return chat.users.find(user => user._id !== loggedUserId);\n  };\n\n  // Function to get chat name for display\n  const getChatName = (chat, loggedUserId) => {\n    if (chat.isGroupChat) {\n      return chat.chatName;\n    }\n    const sender = getSenderDetails(chat, loggedUserId);\n    return (sender === null || sender === void 0 ? void 0 : sender.username) || \"Unknown User\";\n  };\n\n  // Function to get the latest message\n  const getLatestMessage = chat => {\n    if (chat.latestMessage) {\n      return chat.latestMessage.content.length > 20 ? chat.latestMessage.content.substring(0, 20) + '...' : chat.latestMessage.content;\n    }\n    return \"No messages yet\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), chats.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-item ${(selectedChat === null || selectedChat === void 0 ? void 0 : selectedChat._id) === chat._id ? 'selected' : ''}`,\n      onClick: () => handleChatSelect(chat),\n      children: [chat.isGroupChat ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-avatar group-avatar\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"G\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(UserAvatar, {\n        user: getSenderDetails(chat, localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo'))._id : '')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-title\",\n          children: getChatName(chat, localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo'))._id : '')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-last-message\",\n          children: getLatestMessage(chat)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), chat.latestMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-time\",\n        children: new Date(chat.latestMessage.createdAt).toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, chat._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatList, \"3ugGnlYyxlzOQO32zNQssiWyt+k=\", false, function () {\n  return [useChat];\n});\n_c = ChatList;\nexport default ChatList;\nvar _c;\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"names":["React","UserAvatar","useChat","jsxDEV","_jsxDEV","ChatList","chats","handleChatSelect","_s","selectedChat","getSenderDetails","chat","loggedUserId","users","find","user","_id","getChatName","isGroupChat","chatName","sender","username","getLatestMessage","latestMessage","content","length","substring","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","localStorage","getItem","JSON","parse","Date","createdAt","toLocaleTimeString","hour","minute","_c","$RefreshReg$"],"sources":["/home/twarga/Documents/MERN/mern-chat-app/client/src/components/Chat/ChatList.js"],"sourcesContent":["import React from 'react';\nimport UserAvatar from '../UserAvatar/UserAvatar';\nimport { useChat } from '../../hooks/useChat';\nimport './ChatList.css';\n\nconst ChatList = ({ chats, handleChatSelect }) => {\n  const { selectedChat } = useChat();\n\n  // Function to get the other user in a 1-on-1 chat\n  const getSenderDetails = (chat, loggedUserId) => {\n    return chat.users.find(user => user._id !== loggedUserId);\n  };\n\n  // Function to get chat name for display\n  const getChatName = (chat, loggedUserId) => {\n    if (chat.isGroupChat) {\n      return chat.chatName;\n    }\n    const sender = getSenderDetails(chat, loggedUserId);\n    return sender?.username || \"Unknown User\";\n  };\n\n  // Function to get the latest message\n  const getLatestMessage = (chat) => {\n    if (chat.latestMessage) {\n      return chat.latestMessage.content.length > 20\n        ? chat.latestMessage.content.substring(0, 20) + '...'\n        : chat.latestMessage.content;\n    }\n    return \"No messages yet\";\n  };\n\n  return (\n    <div className=\"chat-list\">\n      <h2>Chats</h2>\n      {chats.map(chat => (\n        <div\n          key={chat._id}\n          className={`chat-item ${selectedChat?._id === chat._id ? 'selected' : ''}`}\n          onClick={() => handleChatSelect(chat)}\n        >\n          {chat.isGroupChat ? (\n            <div className=\"chat-avatar group-avatar\">\n              <span>G</span>\n            </div>\n          ) : (\n            <UserAvatar\n              user={getSenderDetails(chat, localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo'))._id : '')}\n            />\n          )}\n          \n          <div className=\"chat-details\">\n            <div className=\"chat-title\">\n              {getChatName(\n                chat,\n                localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo'))._id : ''\n              )}\n            </div>\n            <div className=\"chat-last-message\">\n              {getLatestMessage(chat)}\n            </div>\n          </div>\n          \n          {chat.latestMessage && (\n            <div className=\"chat-time\">\n              {new Date(chat.latestMessage.createdAt).toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n              })}\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ChatList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}