{"ast":null,"code":"var _jsxFileName = \"/home/twarga/Documents/MERN/mern-chat-app/client/src/components/Chat/Notifications/NotificationDropdown.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { useChat } from '../../../hooks/useChat';\nimport './NotificationDropdown.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationDropdown = ({\n  isOpen,\n  onClose\n}) => {\n  _s();\n  const {\n    notifications,\n    setSelectedChat,\n    removeNotification\n  } = useChat();\n  const dropdownRef = useRef(null);\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        onClose();\n      }\n    };\n    if (isOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen, onClose]);\n  const handleNotificationClick = notification => {\n    setSelectedChat(notification.chat);\n    removeNotification(notification.chat._id);\n    onClose();\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-dropdown\",\n    ref: dropdownRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-content\",\n      children: notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-notifications\",\n        children: \"No new notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this) : notifications.map((notification, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-item\",\n        onClick: () => handleNotificationClick(notification),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: notification.sender.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), \" sent you a message in\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: notification.chat.isGroupChat ? notification.chat.chatName : 'your chat'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-time\",\n          children: new Date(notification.createdAt).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationDropdown, \"FXamQepf826r/eFbYj05fy51RmI=\", false, function () {\n  return [useChat];\n});\n_c = NotificationDropdown;\nexport default NotificationDropdown;\nvar _c;\n$RefreshReg$(_c, \"NotificationDropdown\");","map":{"version":3,"names":["React","useRef","useEffect","useChat","jsxDEV","_jsxDEV","NotificationDropdown","isOpen","onClose","_s","notifications","setSelectedChat","removeNotification","dropdownRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleNotificationClick","notification","chat","_id","className","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","onClick","sender","username","isGroupChat","chatName","Date","createdAt","toLocaleTimeString","_c","$RefreshReg$"],"sources":["/home/twarga/Documents/MERN/mern-chat-app/client/src/components/Chat/Notifications/NotificationDropdown.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { useChat } from '../../../hooks/useChat';\nimport './NotificationDropdown.css';\n\nconst NotificationDropdown = ({ isOpen, onClose }) => {\n  const { notifications, setSelectedChat, removeNotification } = useChat();\n  const dropdownRef = useRef(null);\n  \n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        onClose();\n      }\n    };\n    \n    if (isOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    \n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen, onClose]);\n  \n  const handleNotificationClick = (notification) => {\n    setSelectedChat(notification.chat);\n    removeNotification(notification.chat._id);\n    onClose();\n  };\n  \n  if (!isOpen) return null;\n  \n  return (\n    <div className=\"notification-dropdown\" ref={dropdownRef}>\n      <div className=\"dropdown-header\">\n        <h3>Notifications</h3>\n      </div>\n      \n      <div className=\"dropdown-content\">\n        {notifications.length === 0 ? (\n          <div className=\"no-notifications\">No new notifications</div>\n        ) : (\n          notifications.map((notification, index) => (\n            <div \n              key={index}\n              className=\"notification-item\"\n              onClick={() => handleNotificationClick(notification)}\n            >\n              <div className=\"notification-message\">\n                <strong>{notification.sender.username}</strong> sent you a message in{' '}\n                <strong>\n                  {notification.chat.isGroupChat\n                    ? notification.chat.chatName\n                    : 'your chat'}\n                </strong>\n              </div>\n              <div className=\"notification-time\">\n                {new Date(notification.createdAt).toLocaleTimeString()}\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default NotificationDropdown;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}