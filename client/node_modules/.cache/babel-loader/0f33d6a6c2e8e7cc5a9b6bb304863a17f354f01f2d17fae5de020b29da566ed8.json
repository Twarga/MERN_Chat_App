{"ast":null,"code":"import { io } from 'socket.io-client';\n\n// Create socket instance with improved configuration\nconst socket = io('http://localhost:5000', {\n  transports: ['websocket'],\n  // Use WebSocket only for better performance\n  reconnection: true,\n  // Enable reconnection\n  reconnectionAttempts: 5,\n  // Try to reconnect 5 times\n  reconnectionDelay: 1000,\n  // Start with 1s delay between reconnection attempts\n  timeout: 10000,\n  // Connection timeout in ms\n  autoConnect: true // Connect automatically\n});\n\n// Add event listeners for debugging\nsocket.on('connect', () => {\n  console.log('Socket connected successfully');\n});\nsocket.on('disconnect', () => {\n  console.log('Socket disconnected');\n});\nsocket.on('connect_error', error => {\n  console.error('Socket connection error:', error.message);\n});\nsocket.on('reconnect', attempt => {\n  console.log(`Socket reconnected after ${attempt} attempts`);\n});\nsocket.on('reconnect_error', error => {\n  console.error('Socket reconnection error:', error.message);\n});\nexport default socket;","map":{"version":3,"names":["io","socket","transports","reconnection","reconnectionAttempts","reconnectionDelay","timeout","autoConnect","on","console","log","error","message","attempt"],"sources":["/home/twarga/Documents/MERN/mern-chat-app/client/src/utils/socket.js"],"sourcesContent":["import { io } from 'socket.io-client';\n\n// Create socket instance with improved configuration\nconst socket = io('http://localhost:5000', {\n  transports: ['websocket'], // Use WebSocket only for better performance\n  reconnection: true,        // Enable reconnection\n  reconnectionAttempts: 5,   // Try to reconnect 5 times\n  reconnectionDelay: 1000,   // Start with 1s delay between reconnection attempts\n  timeout: 10000,            // Connection timeout in ms\n  autoConnect: true          // Connect automatically\n});\n\n// Add event listeners for debugging\nsocket.on('connect', () => {\n  console.log('Socket connected successfully');\n});\n\nsocket.on('disconnect', () => {\n  console.log('Socket disconnected');\n});\n\nsocket.on('connect_error', (error) => {\n  console.error('Socket connection error:', error.message);\n});\n\nsocket.on('reconnect', (attempt) => {\n  console.log(`Socket reconnected after ${attempt} attempts`);\n});\n\nsocket.on('reconnect_error', (error) => {\n  console.error('Socket reconnection error:', error.message);\n});\n\nexport default socket;"],"mappings":"AAAA,SAASA,EAAE,QAAQ,kBAAkB;;AAErC;AACA,MAAMC,MAAM,GAAGD,EAAE,CAAC,uBAAuB,EAAE;EACzCE,UAAU,EAAE,CAAC,WAAW,CAAC;EAAE;EAC3BC,YAAY,EAAE,IAAI;EAAS;EAC3BC,oBAAoB,EAAE,CAAC;EAAI;EAC3BC,iBAAiB,EAAE,IAAI;EAAI;EAC3BC,OAAO,EAAE,KAAK;EAAa;EAC3BC,WAAW,EAAE,IAAI,CAAU;AAC7B,CAAC,CAAC;;AAEF;AACAN,MAAM,CAACO,EAAE,CAAC,SAAS,EAAE,MAAM;EACzBC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;AAC9C,CAAC,CAAC;AAEFT,MAAM,CAACO,EAAE,CAAC,YAAY,EAAE,MAAM;EAC5BC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;AACpC,CAAC,CAAC;AAEFT,MAAM,CAACO,EAAE,CAAC,eAAe,EAAGG,KAAK,IAAK;EACpCF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACC,OAAO,CAAC;AAC1D,CAAC,CAAC;AAEFX,MAAM,CAACO,EAAE,CAAC,WAAW,EAAGK,OAAO,IAAK;EAClCJ,OAAO,CAACC,GAAG,CAAC,4BAA4BG,OAAO,WAAW,CAAC;AAC7D,CAAC,CAAC;AAEFZ,MAAM,CAACO,EAAE,CAAC,iBAAiB,EAAGG,KAAK,IAAK;EACtCF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAACC,OAAO,CAAC;AAC5D,CAAC,CAAC;AAEF,eAAeX,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}