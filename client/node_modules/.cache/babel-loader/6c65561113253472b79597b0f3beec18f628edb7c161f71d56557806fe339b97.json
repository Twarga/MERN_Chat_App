{"ast":null,"code":"var _jsxFileName = \"/home/twarga/Documents/MERN/mern-chat-app/client/src/pages/ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../hooks/useAuth';\nimport { useChat } from '../hooks/useChat';\nimport ChatList from '../components/Chat/ChatList';\nimport ChatBox from '../components/Chat/ChatBox';\nimport UserAvatar from '../components/UserAvatar/UserAvatar';\nimport GroupChatModal from '../components/Chat/Modals/GroupChatModal';\nimport ProfileModal from '../components/Chat/Modals/ProfileModal';\nimport NotificationBadge from '../components/Chat/Notifications/NotificationBadge';\nimport NotificationDropdown from '../components/Chat/Notifications/NotificationDropdown';\nimport socket from '../utils/socket';\nimport * as api from '../utils/api';\nimport './ChatPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const {\n    chats,\n    selectedChat,\n    setSelectedChat,\n    fetchChats,\n    accessChat,\n    notifications,\n    removeNotification,\n    addNotification\n  } = useChat();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [showGroupModal, setShowGroupModal] = useState(false);\n  const [showProfileModal, setShowProfileModal] = useState(false);\n  const [showNotifications, setShowNotifications] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Verify user authentication on page load\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n      return;\n    }\n\n    // Connect to socket.io\n    socket.emit('setup', user);\n\n    // Fetch user's chats\n    fetchChats(user.token).catch(err => {\n      setError(`Failed to load chats: ${err.message}`);\n    });\n    return () => {\n      // Cleanup socket listeners on unmount\n    };\n  }, [user, navigate, fetchChats]);\n\n  // Handle socket.io message notifications\n  useEffect(() => {\n    // Function to handle new message notifications\n    const handleNewMessage = newMessage => {\n      console.log('New message received for notification:', newMessage);\n\n      // If chat is not selected or doesn't match current chat\n      if (!selectedChat || selectedChat._id !== newMessage.chat._id) {\n        // Add notification\n        addNotification({\n          ...newMessage,\n          createdAt: new Date(),\n          sender: newMessage.sender,\n          chat: newMessage.chat\n        });\n      }\n    };\n    socket.on('message received', handleNewMessage);\n    return () => {\n      socket.off('message received', handleNewMessage);\n    };\n  }, [selectedChat, addNotification]);\n\n  // Handle user search\n  const handleSearchUsers = useCallback(async () => {\n    if (!searchTerm) {\n      setSearchResults([]);\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await api.get(`/api/users?search=${searchTerm}`, user.token);\n      setSearchResults(data);\n      setLoading(false);\n    } catch (error) {\n      setError(`Error searching users: ${error.message}`);\n      setLoading(false);\n    }\n  }, [searchTerm, user === null || user === void 0 ? void 0 : user.token]);\n\n  // Handle user selection from search results\n  // Handle user selection from search results\n  const handleUserSelect = useCallback(async userId => {\n    try {\n      setError(null);\n      await accessChat(userId, user.token);\n      setSearchTerm('');\n      setSearchResults([]);\n    } catch (error) {\n      setError(`Error starting chat: ${error.message}`);\n    }\n  }, [accessChat, user === null || user === void 0 ? void 0 : user.token]);\n\n  // Handle chat selection\n  const handleChatSelect = useCallback(chat => {\n    setSelectedChat(chat);\n\n    // Remove notifications for this chat\n    if (notifications.some(n => n.chat._id === chat._id)) {\n      removeNotification(chat._id);\n    }\n  }, [setSelectedChat, notifications, removeNotification]);\n\n  // Handle logout\n  const handleLogout = useCallback(() => {\n    // Disconnect socket\n    socket.disconnect();\n\n    // Log out user\n    logout();\n    navigate('/login');\n  }, [logout, navigate]);\n\n  // Memoize the chat list to prevent unnecessary re-renders\n  const memoizedChats = useMemo(() => chats, [chats]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          onClick: () => setShowProfileModal(true),\n          children: [/*#__PURE__*/_jsxDEV(UserAvatar, {\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"username\",\n            children: user === null || user === void 0 ? void 0 : user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-actions\",\n          children: [/*#__PURE__*/_jsxDEV(NotificationBadge, {\n            count: notifications.length,\n            onClick: () => setShowNotifications(!showNotifications)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"logout-btn\",\n            onClick: handleLogout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setError(null),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search users...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && handleSearchUsers()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSearchUsers,\n          disabled: loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"loader-small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 24\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 65\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-results\",\n        children: searchResults.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-user-item\",\n          onClick: () => handleUserSelect(user._id),\n          children: [/*#__PURE__*/_jsxDEV(UserAvatar, {\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-name\",\n              children: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-email\",\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create-group-btn\",\n          onClick: () => setShowGroupModal(true),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), \" Create Group Chat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatList, {\n        chats: memoizedChats,\n        selectedChat: selectedChat,\n        handleChatSelect: handleChatSelect,\n        notifications: notifications\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: /*#__PURE__*/_jsxDEV(ChatBox, {\n        chat: selectedChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GroupChatModal, {\n      isOpen: showGroupModal,\n      onClose: () => setShowGroupModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProfileModal, {\n      isOpen: showProfileModal,\n      onClose: () => setShowProfileModal(false),\n      profile: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotificationDropdown, {\n      isOpen: showNotifications,\n      onClose: () => setShowNotifications(false),\n      notifications: notifications,\n      onNotificationClick: chat => {\n        setSelectedChat(chat);\n        removeNotification(chat._id);\n        setShowNotifications(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"i0e7NM4066lN/Lh1SlxFKfIruqw=\", false, function () {\n  return [useAuth, useChat, useNavigate];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","useNavigate","useAuth","useChat","ChatList","ChatBox","UserAvatar","GroupChatModal","ProfileModal","NotificationBadge","NotificationDropdown","socket","api","jsxDEV","_jsxDEV","ChatPage","_s","user","logout","chats","selectedChat","setSelectedChat","fetchChats","accessChat","notifications","removeNotification","addNotification","searchTerm","setSearchTerm","searchResults","setSearchResults","loading","setLoading","showGroupModal","setShowGroupModal","showProfileModal","setShowProfileModal","showNotifications","setShowNotifications","error","setError","navigate","emit","token","catch","err","message","handleNewMessage","newMessage","console","log","_id","chat","createdAt","Date","sender","on","off","handleSearchUsers","data","get","handleUserSelect","userId","handleChatSelect","some","n","handleLogout","disconnect","memoizedChats","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","username","count","length","type","placeholder","value","onChange","e","target","onKeyPress","key","disabled","map","email","isOpen","onClose","profile","onNotificationClick","_c","$RefreshReg$"],"sources":["/home/twarga/Documents/MERN/mern-chat-app/client/src/pages/ChatPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../hooks/useAuth';\nimport { useChat } from '../hooks/useChat';\nimport ChatList from '../components/Chat/ChatList';\nimport ChatBox from '../components/Chat/ChatBox';\nimport UserAvatar from '../components/UserAvatar/UserAvatar';\nimport GroupChatModal from '../components/Chat/Modals/GroupChatModal';\nimport ProfileModal from '../components/Chat/Modals/ProfileModal';\nimport NotificationBadge from '../components/Chat/Notifications/NotificationBadge';\nimport NotificationDropdown from '../components/Chat/Notifications/NotificationDropdown';\nimport socket from '../utils/socket';\nimport * as api from '../utils/api';\nimport './ChatPage.css';\n\nconst ChatPage = () => {\n  const { user, logout } = useAuth();\n  const { \n    chats, \n    selectedChat, \n    setSelectedChat, \n    fetchChats, \n    accessChat,\n    notifications,\n    removeNotification,\n    addNotification\n  } = useChat();\n  \n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [showGroupModal, setShowGroupModal] = useState(false);\n  const [showProfileModal, setShowProfileModal] = useState(false);\n  const [showNotifications, setShowNotifications] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Verify user authentication on page load\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n      return;\n    }\n\n    // Connect to socket.io\n    socket.emit('setup', user);\n    \n    // Fetch user's chats\n    fetchChats(user.token).catch(err => {\n      setError(`Failed to load chats: ${err.message}`);\n    });\n\n    return () => {\n      // Cleanup socket listeners on unmount\n    };\n  }, [user, navigate, fetchChats]);\n\n  // Handle socket.io message notifications\n  useEffect(() => {\n    // Function to handle new message notifications\n    const handleNewMessage = (newMessage) => {\n      console.log('New message received for notification:', newMessage);\n      \n      // If chat is not selected or doesn't match current chat\n      if (!selectedChat || selectedChat._id !== newMessage.chat._id) {\n        // Add notification\n        addNotification({\n          ...newMessage,\n          createdAt: new Date(),\n          sender: newMessage.sender,\n          chat: newMessage.chat\n        });\n      }\n    };\n\n    socket.on('message received', handleNewMessage);\n\n    return () => {\n      socket.off('message received', handleNewMessage);\n    };\n  }, [selectedChat, addNotification]);\n\n  // Handle user search\n  const handleSearchUsers = useCallback(async () => {\n    if (!searchTerm) {\n      setSearchResults([]);\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const data = await api.get(`/api/users?search=${searchTerm}`, user.token);\n      \n      setSearchResults(data);\n      setLoading(false);\n    } catch (error) {\n      setError(`Error searching users: ${error.message}`);\n      setLoading(false);\n    }\n  }, [searchTerm, user?.token]);\n\n  // Handle user selection from search results\n  // Handle user selection from search results\n  const handleUserSelect = useCallback(async (userId) => {\n    try {\n      setError(null);\n      await accessChat(userId, user.token);\n      setSearchTerm('');\n      setSearchResults([]);\n    } catch (error) {\n      setError(`Error starting chat: ${error.message}`);\n    }\n  }, [accessChat, user?.token]);\n\n  // Handle chat selection\n  const handleChatSelect = useCallback((chat) => {\n    setSelectedChat(chat);\n    \n    // Remove notifications for this chat\n    if (notifications.some(n => n.chat._id === chat._id)) {\n      removeNotification(chat._id);\n    }\n  }, [setSelectedChat, notifications, removeNotification]);\n\n  // Handle logout\n  const handleLogout = useCallback(() => {\n    // Disconnect socket\n    socket.disconnect();\n    \n    // Log out user\n    logout();\n    navigate('/login');\n  }, [logout, navigate]);\n\n  // Memoize the chat list to prevent unnecessary re-renders\n  const memoizedChats = useMemo(() => chats, [chats]);\n\n  return (\n    <div className=\"chat-page\">\n      <div className=\"sidebar\">\n        <div className=\"sidebar-header\">\n          <div className=\"user-info\" onClick={() => setShowProfileModal(true)}>\n            <UserAvatar user={user} />\n            <span className=\"username\">{user?.username}</span>\n          </div>\n          <div className=\"header-actions\">\n            <NotificationBadge \n              count={notifications.length} \n              onClick={() => setShowNotifications(!showNotifications)} \n            />\n            <button className=\"logout-btn\" onClick={handleLogout}>\n              Logout\n            </button>\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"error-message\">\n            {error}\n            <button onClick={() => setError(null)}>×</button>\n          </div>\n        )}\n\n        <div className=\"search-container\">\n          <input\n            type=\"text\"\n            placeholder=\"Search users...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            onKeyPress={(e) => e.key === 'Enter' && handleSearchUsers()}\n          />\n          <button onClick={handleSearchUsers} disabled={loading}>\n            {loading ? <span className=\"loader-small\"></span> : <i className=\"fas fa-search\"></i>}\n          </button>\n        </div>\n\n        {searchResults.length > 0 && (\n          <div className=\"search-results\">\n            {searchResults.map(user => (\n              <div\n                key={user._id}\n                className=\"search-user-item\"\n                onClick={() => handleUserSelect(user._id)}\n              >\n                <UserAvatar user={user} />\n                <div className=\"user-details\">\n                  <div className=\"user-name\">{user.username}</div>\n                  <div className=\"user-email\">{user.email}</div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n\n        <div className=\"sidebar-actions\">\n          <button \n            className=\"create-group-btn\"\n            onClick={() => setShowGroupModal(true)}\n          >\n            <i className=\"fas fa-plus\"></i> Create Group Chat\n          </button>\n        </div>\n\n        <ChatList\n          chats={memoizedChats}\n          selectedChat={selectedChat}\n          handleChatSelect={handleChatSelect}\n          notifications={notifications}\n        />\n      </div>\n\n      <div className=\"chat-container\">\n        <ChatBox chat={selectedChat} />\n      </div>\n\n      {/* Modals */}\n      <GroupChatModal \n        isOpen={showGroupModal} \n        onClose={() => setShowGroupModal(false)} \n      />\n      \n      <ProfileModal \n        isOpen={showProfileModal} \n        onClose={() => setShowProfileModal(false)} \n        profile={user}\n      />\n\n      {/* Notification Dropdown */}\n      <NotificationDropdown \n        isOpen={showNotifications} \n        onClose={() => setShowNotifications(false)} \n        notifications={notifications}\n        onNotificationClick={(chat) => {\n          setSelectedChat(chat);\n          removeNotification(chat._id);\n          setShowNotifications(false);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default ChatPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}