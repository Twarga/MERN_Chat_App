{"ast":null,"code":"// API utility for making fetch requests with reliable error handling\nconst API_URL = 'http://localhost:5000';\n\n/**\n * Make API request with enhanced error handling\n */\nconst apiRequest = async (endpoint, options = {}) => {\n  const url = `${API_URL}${endpoint}`;\n  try {\n    console.log(`API Request: ${options.method || 'GET'} ${url}`);\n    const response = await fetch(url, {\n      ...options,\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers\n      }\n    });\n\n    // Try to parse as JSON first\n    let data;\n    const contentType = response.headers.get('content-type');\n    if (contentType && contentType.includes('application/json')) {\n      data = await response.json();\n    } else {\n      data = await response.text();\n    }\n\n    // Check for error status\n    if (!response.ok) {\n      const errorMessage = typeof data === 'object' && data.message ? data.message : `Request failed with status: ${response.status}`;\n      throw new Error(errorMessage);\n    }\n    return data;\n  } catch (error) {\n    console.error(`API Error (${endpoint}):`, error);\n    throw error;\n  }\n};\n\n/**\n * GET request\n */\nexport const get = (endpoint, token) => {\n  return apiRequest(endpoint, {\n    method: 'GET',\n    headers: token ? {\n      'Authorization': `Bearer ${token}`\n    } : {}\n  });\n};\n\n/**\n * POST request\n */\nexport const post = (endpoint, data, token) => {\n  return apiRequest(endpoint, {\n    method: 'POST',\n    headers: token ? {\n      'Authorization': `Bearer ${token}`\n    } : {},\n    body: JSON.stringify(data)\n  });\n};\n\n/**\n * PUT request\n */\nexport const put = (endpoint, data, token) => {\n  return apiRequest(endpoint, {\n    method: 'PUT',\n    headers: token ? {\n      'Authorization': `Bearer ${token}`\n    } : {},\n    body: JSON.stringify(data)\n  });\n};\n\n/**\n * DELETE request\n */\nexport const del = (endpoint, token) => {\n  return apiRequest(endpoint, {\n    method: 'DELETE',\n    headers: token ? {\n      'Authorization': `Bearer ${token}`\n    } : {}\n  });\n};","map":{"version":3,"names":["API_URL","apiRequest","endpoint","options","url","console","log","method","response","fetch","headers","data","contentType","get","includes","json","text","ok","errorMessage","message","status","Error","error","token","post","body","JSON","stringify","put","del"],"sources":["/home/twarga/Documents/MERN/mern-chat-app/client/src/utils/api.js"],"sourcesContent":["// API utility for making fetch requests with reliable error handling\nconst API_URL = 'http://localhost:5000';\n\n/**\n * Make API request with enhanced error handling\n */\nconst apiRequest = async (endpoint, options = {}) => {\n  const url = `${API_URL}${endpoint}`;\n  \n  try {\n    console.log(`API Request: ${options.method || 'GET'} ${url}`);\n    \n    const response = await fetch(url, {\n      ...options,\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers,\n      },\n    });\n    \n    // Try to parse as JSON first\n    let data;\n    const contentType = response.headers.get('content-type');\n    \n    if (contentType && contentType.includes('application/json')) {\n      data = await response.json();\n    } else {\n      data = await response.text();\n    }\n    \n    // Check for error status\n    if (!response.ok) {\n      const errorMessage = typeof data === 'object' && data.message\n        ? data.message\n        : `Request failed with status: ${response.status}`;\n      \n      throw new Error(errorMessage);\n    }\n    \n    return data;\n  } catch (error) {\n    console.error(`API Error (${endpoint}):`, error);\n    throw error;\n  }\n};\n\n/**\n * GET request\n */\nexport const get = (endpoint, token) => {\n  return apiRequest(endpoint, {\n    method: 'GET',\n    headers: token ? { 'Authorization': `Bearer ${token}` } : {}\n  });\n};\n\n/**\n * POST request\n */\nexport const post = (endpoint, data, token) => {\n  return apiRequest(endpoint, {\n    method: 'POST',\n    headers: token ? { 'Authorization': `Bearer ${token}` } : {},\n    body: JSON.stringify(data)\n  });\n};\n\n/**\n * PUT request\n */\nexport const put = (endpoint, data, token) => {\n  return apiRequest(endpoint, {\n    method: 'PUT',\n    headers: token ? { 'Authorization': `Bearer ${token}` } : {},\n    body: JSON.stringify(data)\n  });\n};\n\n/**\n * DELETE request\n */\nexport const del = (endpoint, token) => {\n  return apiRequest(endpoint, {\n    method: 'DELETE',\n    headers: token ? { 'Authorization': `Bearer ${token}` } : {}\n  });\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}