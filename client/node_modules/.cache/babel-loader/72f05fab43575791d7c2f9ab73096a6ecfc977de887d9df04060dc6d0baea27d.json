{"ast":null,"code":"var _jsxFileName = \"/home/twarga/Documents/MERN/mern-chat-app/client/src/components/Chat/ChatBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback, memo } from 'react';\nimport Message from '../Message/Message';\nimport UserAvatar from '../UserAvatar/UserAvatar';\nimport Spinner from '../Spinner/Spinner';\nimport FileUploadModal from './FileUpload/FileUploadModal';\nimport { useAuth } from '../../hooks/useAuth';\nimport socket from '../../utils/socket';\nimport * as api from '../../utils/api';\nimport './ChatBox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBox = ({\n  chat\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState('');\n  const [typing, setTyping] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const [showUploadModal, setShowUploadModal] = useState(false);\n  const [error, setError] = useState(null);\n  const {\n    user\n  } = useAuth();\n  const messagesEndRef = useRef(null);\n  const typingTimeoutRef = useRef(null);\n\n  // Function to fetch messages for a chat\n  const fetchMessages = useCallback(async () => {\n    if (!chat || !chat._id) return;\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await api.get(`/api/messages/${chat._id}`, user.token);\n      setMessages(data);\n      setLoading(false);\n\n      // Join socket room\n      socket.emit('join chat', chat._id);\n    } catch (error) {\n      setError(`Error loading messages: ${error.message}`);\n      setLoading(false);\n    }\n  }, [chat, user === null || user === void 0 ? void 0 : user.token]);\n\n  // Fetch messages when chat changes\n  useEffect(() => {\n    if (chat && chat._id) {\n      fetchMessages();\n      socket.emit('join chat', chat._id);\n    }\n    return () => {\n      // Clean up typing timeout\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n    };\n  }, [chat, fetchMessages]);\n\n  // Set up socket listeners\n  useEffect(() => {\n    const handleNewMessage = newMessageReceived => {\n      // Ensure chat is defined\n      if (!chat || !chat._id) return;\n\n      // Check if message belongs to current chat\n      if (chat._id === newMessageReceived.chat._id) {\n        console.log('New message received in current chat:', newMessageReceived);\n\n        // Add message to current chat\n        setMessages(prevMessages => {\n          // Check if message already exists to avoid duplicates\n          if (!prevMessages.some(m => m._id === newMessageReceived._id)) {\n            return [...prevMessages, newMessageReceived];\n          }\n          return prevMessages;\n        });\n      }\n    };\n    socket.on('message received', handleNewMessage);\n    socket.on('typing', () => setIsTyping(true));\n    socket.on('stop typing', () => setIsTyping(false));\n    return () => {\n      socket.off('message received', handleNewMessage);\n      socket.off('typing');\n      socket.off('stop typing');\n    };\n  }, [chat]);\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Handle typing in the message input\n  const typingHandler = e => {\n    setNewMessage(e.target.value);\n\n    // Typing indicator logic\n    if (!typing && chat) {\n      setTyping(true);\n      socket.emit('typing', chat._id);\n    }\n\n    // Clear timeout\n    if (typingTimeoutRef.current) {\n      clearTimeout(typingTimeoutRef.current);\n    }\n\n    // Stop typing after 3 seconds of inactivity\n    typingTimeoutRef.current = setTimeout(() => {\n      if (chat) {\n        socket.emit('stop typing', chat._id);\n        setTyping(false);\n      }\n    }, 3000);\n  };\n\n  // Send a message\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim() || !chat) return;\n\n    // Stop typing and clear input right away for better UX\n    if (chat) socket.emit('stop typing', chat._id);\n    const messageContent = newMessage.trim();\n    setNewMessage('');\n    try {\n      const messageData = {\n        content: messageContent,\n        chatId: chat._id\n      };\n      const data = await api.post('/api/messages', messageData, user.token);\n      console.log('Message sent:', data);\n\n      // Update local state immediately\n      setMessages(prevMessages => [...prevMessages, data]);\n\n      // Emit to socket\n      socket.emit('new message', data);\n    } catch (error) {\n      setError(`Failed to send message: ${error.message}`);\n      // Restore message if sending fails\n      setNewMessage(messageContent);\n    }\n  };\n\n  // Send an image message\n  const handleFileUpload = async filePath => {\n    if (!chat) return;\n    try {\n      // Create message with image URL\n      const imageMessage = `![Image](${filePath})`;\n      const data = await api.post('/api/messages', {\n        content: imageMessage,\n        chatId: chat._id\n      }, user.token);\n      console.log('Image message sent:', data);\n\n      // Update local state immediately\n      setMessages(prevMessages => [...prevMessages, data]);\n\n      // Emit to socket for real-time update\n      socket.emit('new message', data);\n    } catch (error) {\n      setError(`Failed to send image: ${error.message}`);\n    }\n  };\n\n  // Get chat name for display\n  const getChatName = () => {\n    var _chat$users$find;\n    if (!chat) return \"Chat\";\n    if (chat.isGroupChat) {\n      return chat.chatName;\n    }\n    return ((_chat$users$find = chat.users.find(u => u._id !== user._id)) === null || _chat$users$find === void 0 ? void 0 : _chat$users$find.username) || \"Chat\";\n  };\n\n  // Get status text (online/offline)\n  const getStatusText = () => {\n    if (!chat) return \"\";\n    if (chat.isGroupChat) {\n      return `${chat.users.length} members`;\n    }\n    const chatUser = chat.users.find(u => u._id !== user._id);\n    return chatUser !== null && chatUser !== void 0 && chatUser.isOnline ? 'Online' : 'Offline';\n  };\n  if (!chat) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box chat-box-empty\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select a chat to start messaging\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Search for users or select an existing chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [chat.isGroupChat ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar group-avatar\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"G\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(UserAvatar, {\n        user: chat.users.find(u => u._id !== user._id),\n        size: \"md\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: getChatName()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"status-text\",\n          children: getStatusText()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setError(null),\n        children: \"Dismiss\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-messages\",\n          children: \"No messages yet. Say hello!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 15\n        }, this) : messages.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n          message: message,\n          isSender: message.sender._id === user._id\n        }, message._id || index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"message-input-container\",\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"upload-btn\",\n        onClick: () => setShowUploadModal(true),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message...\",\n        value: newMessage,\n        onChange: typingHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !newMessage.trim(),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-paper-plane\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileUploadModal, {\n      isOpen: showUploadModal,\n      onClose: () => setShowUploadModal(false),\n      onFileUpload: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"g3LUd6hSToDxFBq7VboyDxxzPN0=\", false, function () {\n  return [useAuth];\n});\n_c = ChatBox;\nexport default _c2 = /*#__PURE__*/memo(ChatBox);\nvar _c, _c2;\n$RefreshReg$(_c, \"ChatBox\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","memo","Message","UserAvatar","Spinner","FileUploadModal","useAuth","socket","api","jsxDEV","_jsxDEV","ChatBox","chat","_s","messages","setMessages","loading","setLoading","newMessage","setNewMessage","typing","setTyping","isTyping","setIsTyping","showUploadModal","setShowUploadModal","error","setError","user","messagesEndRef","typingTimeoutRef","fetchMessages","_id","data","get","token","emit","message","current","clearTimeout","handleNewMessage","newMessageReceived","console","log","prevMessages","some","m","on","off","_messagesEndRef$curre","scrollIntoView","behavior","typingHandler","e","target","value","setTimeout","sendMessage","preventDefault","trim","messageContent","messageData","content","chatId","post","handleFileUpload","filePath","imageMessage","getChatName","_chat$users$find","isGroupChat","chatName","users","find","u","username","getStatusText","length","chatUser","isOnline","className","children","fileName","_jsxFileName","lineNumber","columnNumber","size","onClick","map","index","isSender","sender","ref","onSubmit","type","placeholder","onChange","disabled","isOpen","onClose","onFileUpload","_c","_c2","$RefreshReg$"],"sources":["/home/twarga/Documents/MERN/mern-chat-app/client/src/components/Chat/ChatBox.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, memo } from 'react';\nimport Message from '../Message/Message';\nimport UserAvatar from '../UserAvatar/UserAvatar';\nimport Spinner from '../Spinner/Spinner';\nimport FileUploadModal from './FileUpload/FileUploadModal';\nimport { useAuth } from '../../hooks/useAuth';\nimport socket from '../../utils/socket';\nimport * as api from '../../utils/api';\nimport './ChatBox.css';\n\nconst ChatBox = ({ chat }) => {\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState('');\n  const [typing, setTyping] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const [showUploadModal, setShowUploadModal] = useState(false);\n  const [error, setError] = useState(null);\n  const { user } = useAuth();\n  const messagesEndRef = useRef(null);\n  const typingTimeoutRef = useRef(null);\n\n  // Function to fetch messages for a chat\n  const fetchMessages = useCallback(async () => {\n    if (!chat || !chat._id) return;\n\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const data = await api.get(`/api/messages/${chat._id}`, user.token);\n      \n      setMessages(data);\n      setLoading(false);\n\n      // Join socket room\n      socket.emit('join chat', chat._id);\n    } catch (error) {\n      setError(`Error loading messages: ${error.message}`);\n      setLoading(false);\n    }\n  }, [chat, user?.token]);\n\n  // Fetch messages when chat changes\n  useEffect(() => {\n    if (chat && chat._id) {\n      fetchMessages();\n      socket.emit('join chat', chat._id);\n    }\n    return () => {\n      // Clean up typing timeout\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n    };\n  }, [chat, fetchMessages]);\n\n  // Set up socket listeners\n  useEffect(() => {\n    const handleNewMessage = (newMessageReceived) => {\n      // Ensure chat is defined\n      if (!chat || !chat._id) return;\n      \n      // Check if message belongs to current chat\n      if (chat._id === newMessageReceived.chat._id) {\n        console.log('New message received in current chat:', newMessageReceived);\n        \n        // Add message to current chat\n        setMessages(prevMessages => {\n          // Check if message already exists to avoid duplicates\n          if (!prevMessages.some(m => m._id === newMessageReceived._id)) {\n            return [...prevMessages, newMessageReceived];\n          }\n          return prevMessages;\n        });\n      }\n    };\n\n    socket.on('message received', handleNewMessage);\n    socket.on('typing', () => setIsTyping(true));\n    socket.on('stop typing', () => setIsTyping(false));\n\n    return () => {\n      socket.off('message received', handleNewMessage);\n      socket.off('typing');\n      socket.off('stop typing');\n    };\n  }, [chat]);\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  // Handle typing in the message input\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value);\n\n    // Typing indicator logic\n    if (!typing && chat) {\n      setTyping(true);\n      socket.emit('typing', chat._id);\n    }\n\n    // Clear timeout\n    if (typingTimeoutRef.current) {\n      clearTimeout(typingTimeoutRef.current);\n    }\n\n    // Stop typing after 3 seconds of inactivity\n    typingTimeoutRef.current = setTimeout(() => {\n      if (chat) {\n        socket.emit('stop typing', chat._id);\n        setTyping(false);\n      }\n    }, 3000);\n  };\n\n  // Send a message\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    \n    if (!newMessage.trim() || !chat) return;\n    \n    // Stop typing and clear input right away for better UX\n    if (chat) socket.emit('stop typing', chat._id);\n    const messageContent = newMessage.trim();\n    setNewMessage('');\n    \n    try {\n      const messageData = {\n        content: messageContent,\n        chatId: chat._id,\n      };\n      \n      const data = await api.post('/api/messages', messageData, user.token);\n      \n      console.log('Message sent:', data);\n      \n      // Update local state immediately\n      setMessages(prevMessages => [...prevMessages, data]);\n      \n      // Emit to socket\n      socket.emit('new message', data);\n    } catch (error) {\n      setError(`Failed to send message: ${error.message}`);\n      // Restore message if sending fails\n      setNewMessage(messageContent);\n    }\n  };\n\n  // Send an image message\n  const handleFileUpload = async (filePath) => {\n    if (!chat) return;\n    \n    try {\n      // Create message with image URL\n      const imageMessage = `![Image](${filePath})`;\n      \n      const data = await api.post(\n        '/api/messages',\n        {\n          content: imageMessage,\n          chatId: chat._id,\n        },\n        user.token\n      );\n\n      console.log('Image message sent:', data);\n      \n      // Update local state immediately\n      setMessages(prevMessages => [...prevMessages, data]);\n      \n      // Emit to socket for real-time update\n      socket.emit('new message', data);\n    } catch (error) {\n      setError(`Failed to send image: ${error.message}`);\n    }\n  };\n\n  // Get chat name for display\n  const getChatName = () => {\n    if (!chat) return \"Chat\";\n    \n    if (chat.isGroupChat) {\n      return chat.chatName;\n    }\n    \n    return chat.users.find(u => u._id !== user._id)?.username || \"Chat\";\n  };\n\n  // Get status text (online/offline)\n  const getStatusText = () => {\n    if (!chat) return \"\";\n    \n    if (chat.isGroupChat) {\n      return `${chat.users.length} members`;\n    }\n    \n    const chatUser = chat.users.find(u => u._id !== user._id);\n    return chatUser?.isOnline ? 'Online' : 'Offline';\n  };\n\n  if (!chat) {\n    return (\n      <div className=\"chat-box chat-box-empty\">\n        <div>\n          <h3>Select a chat to start messaging</h3>\n          <p>Search for users or select an existing chat</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"chat-box\">\n      <div className=\"chat-header\">\n        {chat.isGroupChat ? (\n          <div className=\"avatar group-avatar\">\n            <span>G</span>\n          </div>\n        ) : (\n          <UserAvatar\n            user={chat.users.find(u => u._id !== user._id)}\n            size=\"md\"\n          />\n        )}\n        \n        <div className=\"chat-info\">\n          <h3>{getChatName()}</h3>\n          <p className=\"status-text\">{getStatusText()}</p>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          {error}\n          <button onClick={() => setError(null)}>Dismiss</button>\n        </div>\n      )}\n\n      <div className=\"messages-container\">\n        {loading ? (\n          <Spinner />\n        ) : (\n          <div className=\"messages\">\n            {messages.length === 0 ? (\n              <div className=\"no-messages\">No messages yet. Say hello!</div>\n            ) : (\n              messages.map((message, index) => (\n                <Message\n                  key={message._id || index}\n                  message={message}\n                  isSender={message.sender._id === user._id}\n                />\n              ))\n            )}\n            <div ref={messagesEndRef} />\n            \n            {isTyping && (\n              <div className=\"typing-indicator\">\n                <div className=\"dot\"></div>\n                <div className=\"dot\"></div>\n                <div className=\"dot\"></div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      <form className=\"message-input-container\" onSubmit={sendMessage}>\n        <button \n          type=\"button\" \n          className=\"upload-btn\"\n          onClick={() => setShowUploadModal(true)}\n        >\n          <i className=\"fas fa-image\"></i>\n        </button>\n        <input\n          type=\"text\"\n          placeholder=\"Type a message...\"\n          value={newMessage}\n          onChange={typingHandler}\n        />\n        <button type=\"submit\" disabled={!newMessage.trim()}>\n          <i className=\"fas fa-paper-plane\"></i>\n        </button>\n      </form>\n      \n      <FileUploadModal \n        isOpen={showUploadModal}\n        onClose={() => setShowUploadModal(false)}\n        onFileUpload={handleFileUpload}\n      />\n    </div>\n  );\n};\n\nexport default memo(ChatBox);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}