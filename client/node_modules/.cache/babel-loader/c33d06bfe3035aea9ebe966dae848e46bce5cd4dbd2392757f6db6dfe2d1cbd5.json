{"ast":null,"code":"var _jsxFileName = \"/home/twarga/Documents/MERN/mern-chat-app/client/src/components/Chat/ChatBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport Message from '../Message/Message';\nimport UserAvatar from '../UserAvatar/UserAvatar';\nimport Spinner from '../Spinner/Spinner';\nimport FileUploadModal from './FileUpload/FileUploadModal';\nimport { useAuth } from '../../hooks/useAuth';\nimport socket from '../../utils/socket';\nimport './ChatBox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBox = ({\n  chat\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState('');\n  const [typing, setTyping] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const [showUploadModal, setShowUploadModal] = useState(false);\n  const [error, setError] = useState(null);\n  const {\n    user\n  } = useAuth();\n  const messagesEndRef = useRef(null);\n  const typingTimeoutRef = useRef(null);\n  const fetchMessages = useCallback(async () => {\n    if (!chat) return;\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch(`http://localhost:5000/api/messages/${chat._id}`, {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to fetch messages');\n      }\n      setMessages(data);\n      setLoading(false);\n\n      // Join socket room\n      socket.emit('join chat', chat._id);\n    } catch (error) {\n      setError('Error loading messages: ' + error.message);\n      setLoading(false);\n    }\n  }, [chat, user === null || user === void 0 ? void 0 : user.token]);\n\n  // Fetch messages when chat changes\n  useEffect(() => {\n    if (chat) {\n      fetchMessages();\n      socket.emit('join chat', chat._id);\n    }\n    return () => {\n      // Clean up typing timeout\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n    };\n  }, [chat, fetchMessages]);\n\n  // Set up socket listeners\n  useEffect(() => {\n    const handleNewMessage = newMessageReceived => {\n      // Check if we're currently looking at the chat the message belongs to\n      if (!chat || chat._id !== newMessageReceived.chat._id) {\n        // If chat is not selected or doesn't match current chat - notification handled elsewhere\n      } else {\n        // Add message to current chat\n        setMessages(prevMessages => [...prevMessages, newMessageReceived]);\n      }\n    };\n    socket.on('message received', handleNewMessage);\n    socket.on('typing', () => setIsTyping(true));\n    socket.on('stop typing', () => setIsTyping(false));\n    return () => {\n      socket.off('message received', handleNewMessage);\n      socket.off('typing');\n      socket.off('stop typing');\n    };\n  }, [chat]);\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const typingHandler = e => {\n    setNewMessage(e.target.value);\n\n    // Typing indicator logic\n    if (!typing) {\n      setTyping(true);\n      socket.emit('typing', chat._id);\n    }\n\n    // Clear timeout\n    if (typingTimeoutRef.current) {\n      clearTimeout(typingTimeoutRef.current);\n    }\n\n    // Stop typing after 3 seconds of inactivity\n    typingTimeoutRef.current = setTimeout(() => {\n      socket.emit('stop typing', chat._id);\n      setTyping(false);\n    }, 3000);\n  };\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (newMessage.trim() === '') return;\n    socket.emit('stop typing', chat._id);\n    setNewMessage(''); // Clear input right away for better UX\n\n    try {\n      const response = await fetch('http://localhost:5000/api/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${user.token}`\n        },\n        body: JSON.stringify({\n          content: newMessage.trim(),\n          chatId: chat._id\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to send message');\n      }\n\n      // Emit to socket\n      socket.emit('new message', data);\n\n      // Update local state immediately\n      setMessages(prevMessages => [...prevMessages, data]);\n    } catch (error) {\n      setError('Failed to send message: ' + error.message);\n    }\n  };\n\n  // Send an image message\n  const handleFileUpload = async filePath => {\n    try {\n      // Create message with image URL\n      const imageMessage = `![Image](${filePath})`;\n      const response = await fetch('http://localhost:5000/api/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${user.token}`\n        },\n        body: JSON.stringify({\n          content: imageMessage,\n          chatId: chat._id\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to send image');\n      }\n      socket.emit('new message', data);\n      setMessages(prevMessages => [...prevMessages, data]);\n    } catch (error) {\n      setError('Failed to send image: ' + error.message);\n    }\n  };\n\n  // Get chat name for display\n  const getChatName = () => {\n    var _chat$users$find;\n    if (!chat) return \"Chat\";\n    if (chat.isGroupChat) {\n      return chat.chatName;\n    }\n    return ((_chat$users$find = chat.users.find(u => u._id !== user._id)) === null || _chat$users$find === void 0 ? void 0 : _chat$users$find.username) || \"Chat\";\n  };\n\n  // Get status text (online/offline)\n  const getStatusText = () => {\n    if (!chat) return \"\";\n    if (chat.isGroupChat) {\n      return `${chat.users.length} members`;\n    }\n    const chatUser = chat.users.find(u => u._id !== user._id);\n    return chatUser !== null && chatUser !== void 0 && chatUser.isOnline ? 'Online' : 'Offline';\n  };\n  if (!chat) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box chat-box-empty\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select a chat to start messaging\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [chat.isGroupChat ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar group-avatar\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"G\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(UserAvatar, {\n        user: chat.users.find(u => u._id !== user._id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: getChatName()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"status-text\",\n          children: getStatusText()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setError(null),\n        children: \"Dismiss\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-messages\",\n          children: \"No messages yet. Say hello!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 15\n        }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(Message, {\n          message: message,\n          isSender: message.sender._id === user._id\n        }, message._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"message-input-container\",\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"upload-btn\",\n        onClick: () => setShowUploadModal(true),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message...\",\n        value: newMessage,\n        onChange: typingHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !newMessage.trim(),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-paper-plane\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileUploadModal, {\n      isOpen: showUploadModal,\n      onClose: () => setShowUploadModal(false),\n      onFileUpload: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"g3LUd6hSToDxFBq7VboyDxxzPN0=\", false, function () {\n  return [useAuth];\n});\n_c = ChatBox;\nexport default _c2 = /*#__PURE__*/React.memo(ChatBox);\nvar _c, _c2;\n$RefreshReg$(_c, \"ChatBox\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Message","UserAvatar","Spinner","FileUploadModal","useAuth","socket","jsxDEV","_jsxDEV","ChatBox","chat","_s","messages","setMessages","loading","setLoading","newMessage","setNewMessage","typing","setTyping","isTyping","setIsTyping","showUploadModal","setShowUploadModal","error","setError","user","messagesEndRef","typingTimeoutRef","fetchMessages","response","fetch","_id","method","headers","Authorization","token","data","json","ok","Error","message","emit","current","clearTimeout","handleNewMessage","newMessageReceived","prevMessages","on","off","scrollToBottom","_messagesEndRef$curre","scrollIntoView","behavior","typingHandler","e","target","value","setTimeout","sendMessage","preventDefault","trim","body","JSON","stringify","content","chatId","handleFileUpload","filePath","imageMessage","getChatName","_chat$users$find","isGroupChat","chatName","users","find","u","username","getStatusText","length","chatUser","isOnline","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","isSender","sender","ref","onSubmit","type","placeholder","onChange","disabled","isOpen","onClose","onFileUpload","_c","_c2","memo","$RefreshReg$"],"sources":["/home/twarga/Documents/MERN/mern-chat-app/client/src/components/Chat/ChatBox.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport Message from '../Message/Message';\nimport UserAvatar from '../UserAvatar/UserAvatar';\nimport Spinner from '../Spinner/Spinner';\nimport FileUploadModal from './FileUpload/FileUploadModal';\nimport { useAuth } from '../../hooks/useAuth';\nimport socket from '../../utils/socket';\nimport './ChatBox.css';\n\nconst ChatBox = ({ chat }) => {\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState('');\n  const [typing, setTyping] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const [showUploadModal, setShowUploadModal] = useState(false);\n  const [error, setError] = useState(null);\n  const { user } = useAuth();\n  const messagesEndRef = useRef(null);\n  const typingTimeoutRef = useRef(null);\n\n  const fetchMessages = useCallback(async () => {\n    if (!chat) return;\n\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`http://localhost:5000/api/messages/${chat._id}`, {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to fetch messages');\n      }\n\n      setMessages(data);\n      setLoading(false);\n\n      // Join socket room\n      socket.emit('join chat', chat._id);\n    } catch (error) {\n      setError('Error loading messages: ' + error.message);\n      setLoading(false);\n    }\n  }, [chat, user?.token]);\n\n  // Fetch messages when chat changes\n  useEffect(() => {\n    if (chat) {\n      fetchMessages();\n      socket.emit('join chat', chat._id);\n    }\n    return () => {\n      // Clean up typing timeout\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n    };\n  }, [chat, fetchMessages]);\n\n  // Set up socket listeners\n  useEffect(() => {\n    const handleNewMessage = (newMessageReceived) => {\n      // Check if we're currently looking at the chat the message belongs to\n      if (!chat || chat._id !== newMessageReceived.chat._id) {\n        // If chat is not selected or doesn't match current chat - notification handled elsewhere\n      } else {\n        // Add message to current chat\n        setMessages(prevMessages => [...prevMessages, newMessageReceived]);\n      }\n    };\n\n    socket.on('message received', handleNewMessage);\n    socket.on('typing', () => setIsTyping(true));\n    socket.on('stop typing', () => setIsTyping(false));\n\n    return () => {\n      socket.off('message received', handleNewMessage);\n      socket.off('typing');\n      socket.off('stop typing');\n    };\n  }, [chat]);\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value);\n\n    // Typing indicator logic\n    if (!typing) {\n      setTyping(true);\n      socket.emit('typing', chat._id);\n    }\n\n    // Clear timeout\n    if (typingTimeoutRef.current) {\n      clearTimeout(typingTimeoutRef.current);\n    }\n\n    // Stop typing after 3 seconds of inactivity\n    typingTimeoutRef.current = setTimeout(() => {\n      socket.emit('stop typing', chat._id);\n      setTyping(false);\n    }, 3000);\n  };\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    \n    if (newMessage.trim() === '') return;\n    \n    socket.emit('stop typing', chat._id);\n    setNewMessage(''); // Clear input right away for better UX\n    \n    try {\n      const response = await fetch('http://localhost:5000/api/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${user.token}`,\n        },\n        body: JSON.stringify({\n          content: newMessage.trim(),\n          chatId: chat._id,\n        }),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to send message');\n      }\n      \n      // Emit to socket\n      socket.emit('new message', data);\n      \n      // Update local state immediately\n      setMessages(prevMessages => [...prevMessages, data]);\n    } catch (error) {\n      setError('Failed to send message: ' + error.message);\n    }\n  };\n\n  // Send an image message\n  const handleFileUpload = async (filePath) => {\n    try {\n      // Create message with image URL\n      const imageMessage = `![Image](${filePath})`;\n      \n      const response = await fetch('http://localhost:5000/api/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${user.token}`,\n        },\n        body: JSON.stringify({\n          content: imageMessage,\n          chatId: chat._id,\n        }),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to send image');\n      }\n\n      socket.emit('new message', data);\n      setMessages(prevMessages => [...prevMessages, data]);\n    } catch (error) {\n      setError('Failed to send image: ' + error.message);\n    }\n  };\n\n  // Get chat name for display\n  const getChatName = () => {\n    if (!chat) return \"Chat\";\n    \n    if (chat.isGroupChat) {\n      return chat.chatName;\n    }\n    \n    return chat.users.find(u => u._id !== user._id)?.username || \"Chat\";\n  };\n\n  // Get status text (online/offline)\n  const getStatusText = () => {\n    if (!chat) return \"\";\n    \n    if (chat.isGroupChat) {\n      return `${chat.users.length} members`;\n    }\n    \n    const chatUser = chat.users.find(u => u._id !== user._id);\n    return chatUser?.isOnline ? 'Online' : 'Offline';\n  };\n\n  if (!chat) {\n    return (\n      <div className=\"chat-box chat-box-empty\">\n        <div>\n          <h3>Select a chat to start messaging</h3>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"chat-box\">\n      <div className=\"chat-header\">\n        {chat.isGroupChat ? (\n          <div className=\"avatar group-avatar\">\n            <span>G</span>\n          </div>\n        ) : (\n          <UserAvatar\n            user={chat.users.find(u => u._id !== user._id)}\n          />\n        )}\n        \n        <div className=\"chat-info\">\n          <h3>{getChatName()}</h3>\n          <p className=\"status-text\">{getStatusText()}</p>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          {error}\n          <button onClick={() => setError(null)}>Dismiss</button>\n        </div>\n      )}\n\n      <div className=\"messages-container\">\n        {loading ? (\n          <Spinner />\n        ) : (\n          <div className=\"messages\">\n            {messages.length === 0 ? (\n              <div className=\"no-messages\">No messages yet. Say hello!</div>\n            ) : (\n              messages.map((message) => (\n                <Message\n                  key={message._id}\n                  message={message}\n                  isSender={message.sender._id === user._id}\n                />\n              ))\n            )}\n            <div ref={messagesEndRef} />\n            \n            {isTyping && (\n              <div className=\"typing-indicator\">\n                <div className=\"dot\"></div>\n                <div className=\"dot\"></div>\n                <div className=\"dot\"></div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      <form className=\"message-input-container\" onSubmit={sendMessage}>\n        <button \n          type=\"button\" \n          className=\"upload-btn\"\n          onClick={() => setShowUploadModal(true)}\n        >\n          <i className=\"fas fa-image\"></i>\n        </button>\n        <input\n          type=\"text\"\n          placeholder=\"Type a message...\"\n          value={newMessage}\n          onChange={typingHandler}\n        />\n        <button type=\"submit\" disabled={!newMessage.trim()}>\n          <i className=\"fas fa-paper-plane\"></i>\n        </button>\n      </form>\n      \n      <FileUploadModal \n        isOpen={showUploadModal}\n        onClose={() => setShowUploadModal(false)}\n        onFileUpload={handleFileUpload}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(ChatBox);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}